{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanjay Sangwan\\\\Desktop\\\\Cursor folder\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case 'CLEAR_ERROR':\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set up axios defaults\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n      localStorage.setItem('token', state.token);\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n    }\n  }, [state.token]);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (state.token) {\n        try {\n          const response = await axios.get('/api/auth/me');\n          dispatch({\n            type: 'AUTH_SUCCESS',\n            payload: {\n              user: response.data.user,\n              token: state.token\n            }\n          });\n        } catch (error) {\n          localStorage.removeItem('token');\n          dispatch({\n            type: 'AUTH_FAILURE',\n            payload: 'Session expired'\n          });\n        }\n      } else {\n        dispatch({\n          type: 'AUTH_FAILURE',\n          payload: null\n        });\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Register user\n  const register = async userData => {\n    dispatch({\n      type: 'AUTH_START'\n    });\n    try {\n      const response = await axios.post('/api/auth/register', userData);\n      toast.success('Registration successful! Please verify your phone number.');\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Registration failed';\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: message\n      });\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Verify OTP\n  const verifyOTP = async (phone, otp) => {\n    try {\n      const response = await axios.post('/api/auth/verify-otp', {\n        phone,\n        otp\n      });\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: {\n          user: response.data.user,\n          token: response.data.token\n        }\n      });\n      toast.success('Phone number verified successfully!');\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'OTP verification failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Login user\n  const login = async (identifier, password) => {\n    dispatch({\n      type: 'AUTH_START'\n    });\n    try {\n      const response = await axios.post('/api/auth/login', {\n        identifier,\n        password\n      });\n      if (response.data.requiresVerification) {\n        toast.error('Please verify your phone number first');\n        return {\n          requiresVerification: true,\n          userId: response.data.userId\n        };\n      }\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: {\n          user: response.data.user,\n          token: response.data.token\n        }\n      });\n      toast.success('Login successful!');\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Login failed';\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: message\n      });\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Resend OTP\n  const resendOTP = async phone => {\n    try {\n      const response = await axios.post('/api/auth/resend-otp', {\n        phone\n      });\n      toast.success('New OTP sent successfully!');\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to resend OTP';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n    toast.success('Logged out successfully');\n  };\n\n  // Update user profile\n  const updateProfile = async profileData => {\n    try {\n      const response = await axios.put('/api/user/profile', profileData);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: response.data.user\n      });\n      toast.success('Profile updated successfully!');\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'Failed to update profile';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Update health profile\n  const updateHealthProfile = async healthData => {\n    try {\n      const response = await axios.put('/api/user/health-profile', healthData);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: {\n          healthProfile: response.data.healthProfile\n        }\n      });\n      toast.success('Health profile updated successfully!');\n      return response.data;\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      const message = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || 'Failed to update health profile';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Change password\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await axios.put('/api/user/change-password', {\n        currentPassword,\n        newPassword\n      });\n      toast.success('Password changed successfully!');\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      const message = ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.error) || 'Failed to change password';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Delete account\n  const deleteAccount = async password => {\n    try {\n      await axios.delete('/api/user/account', {\n        data: {\n          password\n        }\n      });\n      dispatch({\n        type: 'LOGOUT'\n      });\n      toast.success('Account deleted successfully');\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      const message = ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.error) || 'Failed to delete account';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({\n      type: 'CLEAR_ERROR'\n    });\n  };\n  const value = {\n    ...state,\n    register,\n    verifyOTP,\n    login,\n    resendOTP,\n    logout,\n    updateProfile,\n    updateHealthProfile,\n    changePassword,\n    deleteAccount,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","toast","jsxDEV","_jsxDEV","AuthContext","initialState","user","token","localStorage","getItem","isAuthenticated","loading","error","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","defaults","headers","common","setItem","removeItem","checkAuth","response","get","data","register","userData","post","success","_error$response","_error$response$data","message","verifyOTP","phone","otp","_error$response2","_error$response2$data","login","identifier","password","requiresVerification","userId","_error$response3","_error$response3$data","resendOTP","_error$response4","_error$response4$data","logout","updateProfile","profileData","put","_error$response5","_error$response5$data","updateHealthProfile","healthData","healthProfile","_error$response6","_error$response6$data","changePassword","currentPassword","newPassword","_error$response7","_error$response7$data","deleteAccount","delete","_error$response8","_error$response8$data","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Sanjay Sangwan/Desktop/Cursor folder/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'AUTH_START':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case 'AUTH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'AUTH_FAILURE':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload }\r\n      };\r\n    case 'CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Set up axios defaults\r\n  useEffect(() => {\r\n    if (state.token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\r\n      localStorage.setItem('token', state.token);\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n      localStorage.removeItem('token');\r\n    }\r\n  }, [state.token]);\r\n\r\n  // Check if user is authenticated on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (state.token) {\r\n        try {\r\n          const response = await axios.get('/api/auth/me');\r\n          dispatch({\r\n            type: 'AUTH_SUCCESS',\r\n            payload: {\r\n              user: response.data.user,\r\n              token: state.token\r\n            }\r\n          });\r\n        } catch (error) {\r\n          localStorage.removeItem('token');\r\n          dispatch({ type: 'AUTH_FAILURE', payload: 'Session expired' });\r\n        }\r\n      } else {\r\n        dispatch({ type: 'AUTH_FAILURE', payload: null });\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Register user\r\n  const register = async (userData) => {\r\n    dispatch({ type: 'AUTH_START' });\r\n    try {\r\n      const response = await axios.post('/api/auth/register', userData);\r\n      toast.success('Registration successful! Please verify your phone number.');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Registration failed';\r\n      dispatch({ type: 'AUTH_FAILURE', payload: message });\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Verify OTP\r\n  const verifyOTP = async (phone, otp) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/verify-otp', { phone, otp });\r\n      dispatch({\r\n        type: 'AUTH_SUCCESS',\r\n        payload: {\r\n          user: response.data.user,\r\n          token: response.data.token\r\n        }\r\n      });\r\n      toast.success('Phone number verified successfully!');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'OTP verification failed';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Login user\r\n  const login = async (identifier, password) => {\r\n    dispatch({ type: 'AUTH_START' });\r\n    try {\r\n      const response = await axios.post('/api/auth/login', { identifier, password });\r\n      \r\n      if (response.data.requiresVerification) {\r\n        toast.error('Please verify your phone number first');\r\n        return { requiresVerification: true, userId: response.data.userId };\r\n      }\r\n\r\n      dispatch({\r\n        type: 'AUTH_SUCCESS',\r\n        payload: {\r\n          user: response.data.user,\r\n          token: response.data.token\r\n        }\r\n      });\r\n      \r\n      toast.success('Login successful!');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Login failed';\r\n      dispatch({ type: 'AUTH_FAILURE', payload: message });\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Resend OTP\r\n  const resendOTP = async (phone) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/resend-otp', { phone });\r\n      toast.success('New OTP sent successfully!');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Failed to resend OTP';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Logout user\r\n  const logout = () => {\r\n    dispatch({ type: 'LOGOUT' });\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await axios.put('/api/user/profile', profileData);\r\n      dispatch({\r\n        type: 'UPDATE_USER',\r\n        payload: response.data.user\r\n      });\r\n      toast.success('Profile updated successfully!');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Failed to update profile';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Update health profile\r\n  const updateHealthProfile = async (healthData) => {\r\n    try {\r\n      const response = await axios.put('/api/user/health-profile', healthData);\r\n      dispatch({\r\n        type: 'UPDATE_USER',\r\n        payload: { healthProfile: response.data.healthProfile }\r\n      });\r\n      toast.success('Health profile updated successfully!');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Failed to update health profile';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Change password\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await axios.put('/api/user/change-password', { currentPassword, newPassword });\r\n      toast.success('Password changed successfully!');\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Failed to change password';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Delete account\r\n  const deleteAccount = async (password) => {\r\n    try {\r\n      await axios.delete('/api/user/account', { data: { password } });\r\n      dispatch({ type: 'LOGOUT' });\r\n      toast.success('Account deleted successfully');\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Failed to delete account';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Clear error\r\n  const clearError = () => {\r\n    dispatch({ type: 'CLEAR_ERROR' });\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    register,\r\n    verifyOTP,\r\n    login,\r\n    resendOTP,\r\n    logout,\r\n    updateProfile,\r\n    updateHealthProfile,\r\n    changePassword,\r\n    deleteAccount,\r\n    clearError\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC/E,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,MAAMS,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACpCC,eAAe,EAAE,KAAK;EACtBC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,OAAO;QACL,GAAGF,KAAK;QACRH,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,cAAc;MACjB,OAAO;QACL,GAAGE,KAAK;QACRR,IAAI,EAAES,MAAM,CAACE,OAAO,CAACX,IAAI;QACzBC,KAAK,EAAEQ,MAAM,CAACE,OAAO,CAACV,KAAK;QAC3BG,eAAe,EAAE,IAAI;QACrBC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,cAAc;MACjB,OAAO;QACL,GAAGE,KAAK;QACRR,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,IAAI;QACXG,eAAe,EAAE,KAAK;QACtBC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEG,MAAM,CAACE;MAChB,CAAC;IACH,KAAK,QAAQ;MACX,OAAO;QACL,GAAGH,KAAK;QACRR,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,IAAI;QACXG,eAAe,EAAE,KAAK;QACtBC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGE,KAAK;QACRR,IAAI,EAAE;UAAE,GAAGQ,KAAK,CAACR,IAAI;UAAE,GAAGS,MAAM,CAACE;QAAQ;MAC3C,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGH,KAAK;QACRF,KAAK,EAAE;MACT,CAAC;IACH;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGvB,UAAU,CAACe,WAAW,EAAER,YAAY,CAAC;;EAE/D;EACAN,SAAS,CAAC,MAAM;IACd,IAAIe,KAAK,CAACP,KAAK,EAAE;MACfP,KAAK,CAACsB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUV,KAAK,CAACP,KAAK,EAAE;MACxEC,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAEX,KAAK,CAACP,KAAK,CAAC;IAC5C,CAAC,MAAM;MACL,OAAOP,KAAK,CAACsB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;MACrDhB,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;IAClC;EACF,CAAC,EAAE,CAACZ,KAAK,CAACP,KAAK,CAAC,CAAC;;EAEjB;EACAR,SAAS,CAAC,MAAM;IACd,MAAM4B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIb,KAAK,CAACP,KAAK,EAAE;QACf,IAAI;UACF,MAAMqB,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,GAAG,CAAC,cAAc,CAAC;UAChDR,QAAQ,CAAC;YACPL,IAAI,EAAE,cAAc;YACpBC,OAAO,EAAE;cACPX,IAAI,EAAEsB,QAAQ,CAACE,IAAI,CAACxB,IAAI;cACxBC,KAAK,EAAEO,KAAK,CAACP;YACf;UACF,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;UACdJ,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;UAChCL,QAAQ,CAAC;YAAEL,IAAI,EAAE,cAAc;YAAEC,OAAO,EAAE;UAAkB,CAAC,CAAC;QAChE;MACF,CAAC,MAAM;QACLI,QAAQ,CAAC;UAAEL,IAAI,EAAE,cAAc;UAAEC,OAAO,EAAE;QAAK,CAAC,CAAC;MACnD;IACF,CAAC;IAEDU,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnCX,QAAQ,CAAC;MAAEL,IAAI,EAAE;IAAa,CAAC,CAAC;IAChC,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAM5B,KAAK,CAACiC,IAAI,CAAC,oBAAoB,EAAED,QAAQ,CAAC;MACjE/B,KAAK,CAACiC,OAAO,CAAC,2DAA2D,CAAC;MAC1E,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOlB,KAAK,EAAE;MAAA,IAAAuB,eAAA,EAAAC,oBAAA;MACd,MAAMC,OAAO,GAAG,EAAAF,eAAA,GAAAvB,KAAK,CAACgB,QAAQ,cAAAO,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBL,IAAI,cAAAM,oBAAA,uBAApBA,oBAAA,CAAsBxB,KAAK,KAAI,qBAAqB;MACpES,QAAQ,CAAC;QAAEL,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAEoB;MAAQ,CAAC,CAAC;MACpDpC,KAAK,CAACW,KAAK,CAACyB,OAAO,CAAC;MACpB,MAAMzB,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAM0B,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,GAAG,KAAK;IACtC,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAM5B,KAAK,CAACiC,IAAI,CAAC,sBAAsB,EAAE;QAAEM,KAAK;QAAEC;MAAI,CAAC,CAAC;MACzEnB,QAAQ,CAAC;QACPL,IAAI,EAAE,cAAc;QACpBC,OAAO,EAAE;UACPX,IAAI,EAAEsB,QAAQ,CAACE,IAAI,CAACxB,IAAI;UACxBC,KAAK,EAAEqB,QAAQ,CAACE,IAAI,CAACvB;QACvB;MACF,CAAC,CAAC;MACFN,KAAK,CAACiC,OAAO,CAAC,qCAAqC,CAAC;MACpD,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOlB,KAAK,EAAE;MAAA,IAAA6B,gBAAA,EAAAC,qBAAA;MACd,MAAML,OAAO,GAAG,EAAAI,gBAAA,GAAA7B,KAAK,CAACgB,QAAQ,cAAAa,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBX,IAAI,cAAAY,qBAAA,uBAApBA,qBAAA,CAAsB9B,KAAK,KAAI,yBAAyB;MACxEX,KAAK,CAACW,KAAK,CAACyB,OAAO,CAAC;MACpB,MAAMzB,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAM+B,KAAK,GAAG,MAAAA,CAAOC,UAAU,EAAEC,QAAQ,KAAK;IAC5CxB,QAAQ,CAAC;MAAEL,IAAI,EAAE;IAAa,CAAC,CAAC;IAChC,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAM5B,KAAK,CAACiC,IAAI,CAAC,iBAAiB,EAAE;QAAEW,UAAU;QAAEC;MAAS,CAAC,CAAC;MAE9E,IAAIjB,QAAQ,CAACE,IAAI,CAACgB,oBAAoB,EAAE;QACtC7C,KAAK,CAACW,KAAK,CAAC,uCAAuC,CAAC;QACpD,OAAO;UAAEkC,oBAAoB,EAAE,IAAI;UAAEC,MAAM,EAAEnB,QAAQ,CAACE,IAAI,CAACiB;QAAO,CAAC;MACrE;MAEA1B,QAAQ,CAAC;QACPL,IAAI,EAAE,cAAc;QACpBC,OAAO,EAAE;UACPX,IAAI,EAAEsB,QAAQ,CAACE,IAAI,CAACxB,IAAI;UACxBC,KAAK,EAAEqB,QAAQ,CAACE,IAAI,CAACvB;QACvB;MACF,CAAC,CAAC;MAEFN,KAAK,CAACiC,OAAO,CAAC,mBAAmB,CAAC;MAClC,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOlB,KAAK,EAAE;MAAA,IAAAoC,gBAAA,EAAAC,qBAAA;MACd,MAAMZ,OAAO,GAAG,EAAAW,gBAAA,GAAApC,KAAK,CAACgB,QAAQ,cAAAoB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBlB,IAAI,cAAAmB,qBAAA,uBAApBA,qBAAA,CAAsBrC,KAAK,KAAI,cAAc;MAC7DS,QAAQ,CAAC;QAAEL,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAEoB;MAAQ,CAAC,CAAC;MACpDpC,KAAK,CAACW,KAAK,CAACyB,OAAO,CAAC;MACpB,MAAMzB,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAMsC,SAAS,GAAG,MAAOX,KAAK,IAAK;IACjC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAM5B,KAAK,CAACiC,IAAI,CAAC,sBAAsB,EAAE;QAAEM;MAAM,CAAC,CAAC;MACpEtC,KAAK,CAACiC,OAAO,CAAC,4BAA4B,CAAC;MAC3C,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOlB,KAAK,EAAE;MAAA,IAAAuC,gBAAA,EAAAC,qBAAA;MACd,MAAMf,OAAO,GAAG,EAAAc,gBAAA,GAAAvC,KAAK,CAACgB,QAAQ,cAAAuB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBrB,IAAI,cAAAsB,qBAAA,uBAApBA,qBAAA,CAAsBxC,KAAK,KAAI,sBAAsB;MACrEX,KAAK,CAACW,KAAK,CAACyB,OAAO,CAAC;MACpB,MAAMzB,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAMyC,MAAM,GAAGA,CAAA,KAAM;IACnBhC,QAAQ,CAAC;MAAEL,IAAI,EAAE;IAAS,CAAC,CAAC;IAC5Bf,KAAK,CAACiC,OAAO,CAAC,yBAAyB,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMoB,aAAa,GAAG,MAAOC,WAAW,IAAK;IAC3C,IAAI;MACF,MAAM3B,QAAQ,GAAG,MAAM5B,KAAK,CAACwD,GAAG,CAAC,mBAAmB,EAAED,WAAW,CAAC;MAClElC,QAAQ,CAAC;QACPL,IAAI,EAAE,aAAa;QACnBC,OAAO,EAAEW,QAAQ,CAACE,IAAI,CAACxB;MACzB,CAAC,CAAC;MACFL,KAAK,CAACiC,OAAO,CAAC,+BAA+B,CAAC;MAC9C,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOlB,KAAK,EAAE;MAAA,IAAA6C,gBAAA,EAAAC,qBAAA;MACd,MAAMrB,OAAO,GAAG,EAAAoB,gBAAA,GAAA7C,KAAK,CAACgB,QAAQ,cAAA6B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB3B,IAAI,cAAA4B,qBAAA,uBAApBA,qBAAA,CAAsB9C,KAAK,KAAI,0BAA0B;MACzEX,KAAK,CAACW,KAAK,CAACyB,OAAO,CAAC;MACpB,MAAMzB,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAM+C,mBAAmB,GAAG,MAAOC,UAAU,IAAK;IAChD,IAAI;MACF,MAAMhC,QAAQ,GAAG,MAAM5B,KAAK,CAACwD,GAAG,CAAC,0BAA0B,EAAEI,UAAU,CAAC;MACxEvC,QAAQ,CAAC;QACPL,IAAI,EAAE,aAAa;QACnBC,OAAO,EAAE;UAAE4C,aAAa,EAAEjC,QAAQ,CAACE,IAAI,CAAC+B;QAAc;MACxD,CAAC,CAAC;MACF5D,KAAK,CAACiC,OAAO,CAAC,sCAAsC,CAAC;MACrD,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOlB,KAAK,EAAE;MAAA,IAAAkD,gBAAA,EAAAC,qBAAA;MACd,MAAM1B,OAAO,GAAG,EAAAyB,gBAAA,GAAAlD,KAAK,CAACgB,QAAQ,cAAAkC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBhC,IAAI,cAAAiC,qBAAA,uBAApBA,qBAAA,CAAsBnD,KAAK,KAAI,iCAAiC;MAChFX,KAAK,CAACW,KAAK,CAACyB,OAAO,CAAC;MACpB,MAAMzB,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAMoD,cAAc,GAAG,MAAAA,CAAOC,eAAe,EAAEC,WAAW,KAAK;IAC7D,IAAI;MACF,MAAMlE,KAAK,CAACwD,GAAG,CAAC,2BAA2B,EAAE;QAAES,eAAe;QAAEC;MAAY,CAAC,CAAC;MAC9EjE,KAAK,CAACiC,OAAO,CAAC,gCAAgC,CAAC;IACjD,CAAC,CAAC,OAAOtB,KAAK,EAAE;MAAA,IAAAuD,gBAAA,EAAAC,qBAAA;MACd,MAAM/B,OAAO,GAAG,EAAA8B,gBAAA,GAAAvD,KAAK,CAACgB,QAAQ,cAAAuC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBrC,IAAI,cAAAsC,qBAAA,uBAApBA,qBAAA,CAAsBxD,KAAK,KAAI,2BAA2B;MAC1EX,KAAK,CAACW,KAAK,CAACyB,OAAO,CAAC;MACpB,MAAMzB,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAMyD,aAAa,GAAG,MAAOxB,QAAQ,IAAK;IACxC,IAAI;MACF,MAAM7C,KAAK,CAACsE,MAAM,CAAC,mBAAmB,EAAE;QAAExC,IAAI,EAAE;UAAEe;QAAS;MAAE,CAAC,CAAC;MAC/DxB,QAAQ,CAAC;QAAEL,IAAI,EAAE;MAAS,CAAC,CAAC;MAC5Bf,KAAK,CAACiC,OAAO,CAAC,8BAA8B,CAAC;IAC/C,CAAC,CAAC,OAAOtB,KAAK,EAAE;MAAA,IAAA2D,gBAAA,EAAAC,qBAAA;MACd,MAAMnC,OAAO,GAAG,EAAAkC,gBAAA,GAAA3D,KAAK,CAACgB,QAAQ,cAAA2C,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBzC,IAAI,cAAA0C,qBAAA,uBAApBA,qBAAA,CAAsB5D,KAAK,KAAI,0BAA0B;MACzEX,KAAK,CAACW,KAAK,CAACyB,OAAO,CAAC;MACpB,MAAMzB,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAM6D,UAAU,GAAGA,CAAA,KAAM;IACvBpD,QAAQ,CAAC;MAAEL,IAAI,EAAE;IAAc,CAAC,CAAC;EACnC,CAAC;EAED,MAAM0D,KAAK,GAAG;IACZ,GAAG5D,KAAK;IACRiB,QAAQ;IACRO,SAAS;IACTK,KAAK;IACLO,SAAS;IACTG,MAAM;IACNC,aAAa;IACbK,mBAAmB;IACnBK,cAAc;IACdK,aAAa;IACbI;EACF,CAAC;EAED,oBACEtE,OAAA,CAACC,WAAW,CAACuE,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAvD,QAAA,EAChCA;EAAQ;IAAAyD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3D,EAAA,CA7MWF,YAAY;AAAA8D,EAAA,GAAZ9D,YAAY;AA+MzB,OAAO,MAAM+D,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGtF,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAAC+E,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}